{
	"tdockercrearctn": {
		"prefix": "tdocker crear contenedor BC (EAD)",
		"body": [
			"#Install-Module navcontainerhelper -force\r",
			"#Import-Module navcontainerhelper\r",
			"# Rutas y nombres\r",
			"\\$bcDockerImage = 'mcr.microsoft.com/businesscentral/${1:sandbox:15.1.37881.39313-es-ltsc2019}'\r",
			"\\$licenseFileUri = 'C:\\Licencia\\licencia.flf'\r",
			"\\$containername = '${3:NombreContenedor}'\r",
			"# Usuarios\r",
			"\\$userName = \"${4:Usuario}\"\r",
			"\\$password = ConvertTo-SecureString -String \"${5:Pass}\" -AsPlainText -Force\r",
			"\\$credential = New-Object -TypeName \"System.Management.Automation.PSCredential\" -ArgumentList \\$userName, \\$password\r",
			"\r",
			"New-BCContainer -accept_eula `\r",
			"                 -containername \\$containername `\r",
			"                 -auth UserPassword `\r",
			"                 -Credential \\$credential `\r",
			"                 -licenseFile \\$licenseFileUri `\r",
			"                 -includeAL `\r",
			"                 -updateHosts `\r",
			"                 -accept_outdated `\r",
			"                 -assignPremiumPlan `\r",
			"                 -imageName \\$bcdockerimage `\r",
			"                 -useBestContainerOS"
		],
		"description": "Script para crear un contenedor de Business Central (EAD) "
	},
	"tdockercrearctndesdebak": {
		"prefix": "tdocker crear contenedor BC desde .bak (EAD)",
		"body": [
			"#Install-Module navcontainerhelper -force\r",
			"#Import-Module navcontainerhelper\r",
			"# Rutas y nombres\r",
			"\\$bcDockerImage = 'mcr.microsoft.com/businesscentral/${1:sandbox:15.1.37881.39313-es-ltsc2019}'\r",
			"\\$licenseFileUri = 'C:\\Licencia\\licencia.flf'\r",
			"\\$containername = '${3:NombreContenedor}'\r",
			"\\$backup = 'C:\\backup\\\\${4:backup}.bak'\r",
			"# Usuarios\r",
			"\\$userName = \"${5:Usuario}\"\r",
			"\\$password = ConvertTo-SecureString -String \"${6:Pass}\" -AsPlainText -Force\r",
			"\\$credential = New-Object -TypeName \"System.Management.Automation.PSCredential\" -ArgumentList \\$userName, \\$password\r",
			"\r",
			"New-BCContainer -accept_eula `\r",
			"                 -containername \\$containername `\r",
			"                 -auth UserPassword `\r",
			"                 -Credential \\$credential `\r",
			"                 -licenseFile \\$licenseFileUri `\r",
			"                 -includeAL `\r",
			"                 -updateHosts `\r",
			"                 -accept_outdated `\r",
			"                 -assignPremiumPlan `\r",
			"                 -imageName \\$bcdockerimage `\r",
			"                 -useBestContainerOS `\r",
			"                 -bakFile \\$backup"
		],
		"description": "Script para crear un contenedor de Business Central desde .bak (EAD) "
	},
	"tdockerimportartest": {
		"prefix": "tdocker importar codeunit y extensiones de test (EAD)",
		"body": [
			"\\$containername = '${1:NombreContenedor}'\r",
			"\r",
			"Import-TestToolkitToBCContainer -containerName \\$containerName -testToolkitCountry ${2:ES}"
		],
		"description": "Importar codeunit y extensiones de test (EAD) "
	},
	"tdockerverdetallesimagenesdocker": {
		"prefix": "tdocker ver detalles de imagenes de Docker (EAD)",
		"body": [
			"\\$bcDockerImage = 'mcr.microsoft.com/businesscentral/sandbox:15.1.37881.39313-es-ltsc2019'\r",
			"\r",
			"Get-NavContainerImageLabels \\$bcDockerImage"
		],
		"description": "Ver detalles de imagenes de Docker (EAD)"
	},
	"tdockerextraerbasedectn": {
		"prefix": "tdocker extraer codigo de la BaseAPP desde contenedor (EAD)",
		"body": [
			"# Nombre del contenedor del que queremos extraer la baseapp\r",
			"# Tiene que ser un contenedor creado con el flag de -includeAL y sin -doNotExportObjectsToText.\r",
			"\\$containerName = \"${1:BaseAL}\"\r",
			"\\$alProjectFolder = \"C:\\Repositorio\\\\${2:BaseAPP15}\"\r",
			"\r",
			"Create-AlProjectFolderFromBcContainer -containerName \\$containerName -alProjectFolder \\$alProjectFolder -useBaseLine -useBaseAppProperties -addGIT"
		],
		"description": "Extraer codigo de la BaseAPP desde contenedor (EAD)"
	},
	"tdockerverayuda": {
		"prefix": "tdocker ver ayuda de navcontainerhelper (EAD)",
		"body": [
			"get-command -Module navcontainerhelper\r",
			"Get-Help New-NavContainer -full\r",
			"help new-navcontainer -detailed\r",
			"Write-NavContainerHelperWelcomeText"
		],
		"description": "Ver ayuda de navcontainerhelper desde vscode (EAD)"
	},
	"tdockercopiarcontenedoralocal": {
		"prefix": "tdocker copiar archivo desde contenedor a local (EAD)",
		"body": [
			"Copy-FileFromNavContainer `\r",
			"    -containerName \"${1:NombreContenedor}\" `\r",
			"    -containerPath \"${2:C:\\run\\my}\" `\r",
			"    -localPath \"${3:C:\\Temp\\file.app}\""
		],
		"description": "Copiar archivo desde contenedor a local (EAD)"
	},
	"tdockercopiarlocalacontenedor": {
		"prefix": "tdocker copiar archivo local a contenedor (EAD)",
		"body": [
			"Copy-FileToNavContainer `\r",
			"    -containerName \"${1:NombreContenedor}\" `\r",
			"    -containerPath \"${2:C:\\run\\my}\" `\r",
			"    -localPath \"${3:C:\\Temp\\file.app}\""
		],
		"description": "Copiar archivo local a contenedor (EAD)"
	},
	"tdockerimportarlicencia": {
		"prefix": "tdocker importar licencia (EAD)",
		"body": [
			"\\$containerName = \"${1:NombreContenedor}\"\r",
			"\\$licenseFileUri = '${2:C:\\Licencia\\licencia.flf}'\r",
			"\r",
			"Import-NavContainerLicense -licenseFile \\$licenseFileUri -containerName \\$containerName"
		],
		"description": "Importar licencia (EAD)"
	},
	"tdockeragregarfuentesalcontenedor": {
		"prefix": "tdocker agregar fuentes de Windows a un contenedor (EAD)",
		"body": [
			"\\$containerName = \"${1:NombreContenedor}\"\r",
			"\r",
			"Add-FontsToNavContainer -containerName \\$containerName"
		],
		"description": "Agregar fuentes de Windows a un contenedor (EAD)"
	},
	"tdockercrearusuario": {
		"prefix": "tdocker crear usuario en contenedor (EAD)",
		"body": [
			"\\$containername = 'NombreContenedor'\r",
			"\\$userName = \"Usuario\"\r",
			"\\$password = ConvertTo-SecureString -String \"Pass\" -AsPlainText -Force\r",
			"\\$credential = New-Object -TypeName \"System.Management.Automation.PSCredential\" -ArgumentList \\$userName, \\$password\r",
			"\\$permisionSetId = \"SUPER\"\r",
			"\r",
			"New-NavContainerNavUser -Credential \\$credential -containerName \\$containername -PermissionSetId \\$permisionSetId\r"
		],
		"description": "Crear usuario en contenedor (EAD)"
	},
	"tdockerdesinstalarapp": {
		"prefix": "tdocker desinstalar/despublicar app (EAD)",
		"body": [
			"\\$containerName = \"${1:NombreContenedor}\"\r",
			"\\$appName = \"${2:App}\"\r",
			"\r",
			"UnInstall-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appName \\$appName `",
			"    -Verbose `",
			"    -ErrorAction SilentlyContinue",
			"\r",
			"UnPublish-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appName \\$appName `",
			"    -Verbose `",
			"    -ErrorAction SilentlyContinue"
		],
		"description": "Desinstalar/despublicar app (EAD)"
	},
	"tdockerinstalarapp": {
		"prefix": "tdocker instalar app (EAD)",
		"body": [
			"\\$containerName = \"${1:NombreContenedor}\"\r",
			"\\$rutaApp = \"${2:C:\\temp\\app.app}\"\r",
			"\\$appName = \"${3:App}\"\r",
			"\r",
			"Publish-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appFile \\$rutaApp `",
			"    -Verbose `",
			"    -SkipVerification `",
			"    -ErrorAction stop",
			"\r",
			"Sync-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appName \\$appName `",
			"    -ErrorAction stop",
			"\r",
			"Install-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appName \\$appName"
		],
		"description": "Instalar app (EAD)"
	},
	"tdockeractualizarapp": {
		"prefix": "tdocker actualizar app (EAD)",
		"body": [
			"\\$containerName = \"${1:NombreContenedor}\"\r",
			"\\$rutaApp = \"${2:C:\\temp\\app.app}\"\r",
			"\\$appName = \"${3:App}\"\r",
			"\r",
			"UnInstall-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appName \\$appName `",
			"    -Verbose `",
			"    -ErrorAction SilentlyContinue",
			"\r",
			"UnPublish-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appName \\$appName `",
			"    -Verbose `",
			"    -ErrorAction SilentlyContinue",
			"\r",
			"Publish-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appFile \\$rutaApp `",
			"    -Verbose `",
			"    -SkipVerification `",
			"    -ErrorAction stop",
			"\r",
			"Sync-NavContainerApp `",
			"    -containerName \\$containername `",
			"    -appName \\$appName `",
			"    -ErrorAction stop",
			"\r",
			"Start-NavContainerAppDataUpgrade `",
			"    -containerName \\$containername `",
			"    -appName \\$appName"
		],
		"description": "Actualizar app (EAD)"
	}		
}