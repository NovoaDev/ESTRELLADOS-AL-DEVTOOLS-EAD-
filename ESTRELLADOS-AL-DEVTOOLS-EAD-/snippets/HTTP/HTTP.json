{
	"tapitestapibcautbasica": {
		"prefix": "tapi Test APIs Sandbox BC Aut basica (EAD)",
		"body": [
			"### AuthBasica\r",
			"@TenantID = ${1:11111111-1111-1111-1111-111111111111}\r",
			"@Env = ${2:Production}\r",
			"@APIPublisher = ${3:anj}\r",
			"@APIGroup = ${4:anjtools}\r",
			"@APIVersion = ${5:v1.0}\r",
			"@CompaniesID = ${6:aaaaaaaa-1111-aaaa-1111-aaaaaaaaaaaa}\r",
			"@EntityName = ${7:Entity}\r",
			"@User = ${8:ADMIN}\r",
			"@WSPass = ${9:aaaaaaaaaa1111111111aaaaaaaaaa1111111111aaaa}\r",
			"\r",
			"###-------------------------------- Obtener todas las APIs BC\r",
			"GET https://api.businesscentral.dynamics.com/v1.0/{{TenantID}}/{{Env}}/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Obtener empresas\r",
			"GET https://api.businesscentral.dynamics.com/v1.0/{{TenantID}}/Production/api/{{APIVersion}}/companies\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Obtener todos los reg\r",
			"GET https://api.businesscentral.dynamics.com/v1.0/{{TenantID}}/{{Env}}/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Obtener un solo reg\r",
			"@REC = aaaaaaaa-1111-aaaa-1111-aaaaaaaaaaaa\r",
			"GET https://api.businesscentral.dynamics.com/v1.0/{{TenantID}}/{{Env}}/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}({{REC}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Insertar datos\r",
			"POST https://api.businesscentral.dynamics.com/v1.0/{{TenantID}}/{{Env}}/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"{\r",
			"    \"Text\": \"Text\",",
			"    \"Int\": 100",
			"}\r",
			"\r",
			"###-------------------------------- Modificar datos\r",
			"@RECMOD = aaaaaaaa-1111-aaaa-1111-aaaaaaaaaaaa\r",
			"PATCH https://api.businesscentral.dynamics.com/v1.0/{{TenantID}}/{{Env}}/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}({{RECMOD}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"If-Match: *\r",
			"{\r",
			"    \"Text\": \"Text\",",
			"    \"Int\": 100",
			"}\r",
			"\r",
			"###-------------------------------- Eliminar Reg\r",
			"@RECDELETE = aaaaaaaa-1111-aaaa-1111-aaaaaaaaaaaa\r",
			"DELETE https://api.businesscentral.dynamics.com/v1.0/{{TenantID}}/{{Env}}/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}({{RECDELETE}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"If-Match: *"
		],
		"description": "tapi test APIs Sandbox BC Aut basica (EAD)"
	},
	"twsdocker": {
		"prefix": "tws test WS Docker BC Aut basica (EAD)",
		"body": [
			"# TEST WS ODATA\r",
			"\r",
			"##----------------------------------------------------------------------------------------------------------------\r",
			"## ---------------------------------------------------  PAGE WS \r",
			"##----------------------------------------------------------------------------------------------------------------\r",
			"\r",
			"### AuthBasica\r",
			"@Container = Container\r",
			"@Company = CRONUS%20Espa%C3%B1a%20S.A.\r",
			"@PageEntity = PageEntity\r",
			"@User = User\r",
			"@WSPass =aaaaaaaaaa1111111111aaaaaaaaaa1111111111aaaa\r",
			"\r",
			"###-------------------------------- Obtener todos los reg\r",
			"GET http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"### Si no tenemos definidos el oDatakey tendremos que indicar los registros que queremos CRUD mediante la llave primaria\r",
			"### Si es un solo campo como en la tabla customer es '1000' si es de una table con llave compleja se tendria que serparar\r",
			"### por comas ejemplo de factura 'Invoice', '1004'\r",
			"\r",
			"###-------------------------------- Obtener un solo reg \r",
			"@REC = '10000' \r",
			"GET http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}({{REC}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Insertar datos\r",
			"POST http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"\r",
			"{\r",
			"      \"No\": \"99998\",\r",
			"      \"Name\": \"Sptsssssss\",\r",
			"      \"E_Mail\": \"\"\r",
			"}\r",
			"\r",
			"###-------------------------------- Modificar datos\r",
			"@RECMOD = '99998'\r",
			"PATCH http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}({{RECMOD}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"If-Match: *\r",
			"\r",
			"{\r",
			"\"Name\": \"casa\"\r",
			"}\r",
			"\r",
			"###-------------------------------- Eliminar Reg\r",
			"@RECDELETE = '99998'\r",
			"DELETE http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}({{RECDELETE}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"If-Match: *\r",
			"\r",
			"###-------------------------------- Obtener reg Filtrados\r",
			"# se tiene que indicar /?$filter= seguido del campo que queremos filtrar el operdor para comparar en este caso eq y por ultimo entre comillas simples el valor de nuestro campo.\r",
			"GET http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}/?$filter=nombre eq 'Antonio'\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"\r",
			"###-------------------------------- Bound accions\r",
			"@RECACTIONS = 01121212\r",
			"\r",
			"# Accion sin parametro ni retorno.\r",
			"POST http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}('{{RECACTIONS}}')/NAV.Action1\r",
			"content-type: application/x-www-form-urlencoded\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"\r",
			"###-------------------------------- Bound accions con parametros\r",
			"@RECACTIONS = 01121212\r",
			"\r",
			"# Accion que pide parametro y obtiene retorno.\r",
			"POST http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{PageEntity}}('{{RECACTIONS}}')/NAV.Action2\r",
			"content-type: application/json\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"{ nombre: \"WS\"}\r",
			"\r",
			"##----------------------------------------------------------------------------------------------------------------\r",
			"## ---------------------------------------------------  Query WS\r",
			"##----------------------------------------------------------------------------------------------------------------\r",
			"\r",
			"###-------------------------------- Obtener todos los reg\r",
			"@QueryEntity = Query_WS\r",
			"\r",
			"GET http://{{Container}}:7048/BC/ODataV4/Company('{{Company}}')/{{QueryEntity}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"##----------------------------------------------------------------------------------------------------------------\r",
			"## ---------------------------------------------------  Codeunit WS\r",
			"##----------------------------------------------------------------------------------------------------------------\r",
			"\r",
			"###-------------------------------- UnBound accions\r",
			"@CodeunitWSName = UnboundActions\r",
			"@ActionName = ClonarCust\r",
			"\r",
			"POST http://{{Container}}:7048/BC/ODataV4/{{CodeunitWSName}}_{{ActionName}}?Company={{Company}}\r",
			"content-type: application/x-www-form-urlencoded\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"\r",
			"###-------------------------------- UnBound accions con parametros\r",
			"@ActionNameWitParameterAndReturn = ClonarCust\r",
			"POST http://{{Container}}:7048/BC/ODataV4/{{CodeunitWSName}}_{{ActionNameWitParameterAndReturn}}?Company={{Company}}\r",
			"content-type: application/json\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"{ codigo: \"01121212\",\r",
			"    nombre: \"WS Unbound actions con parametro\"}\r",
			""
		],
		"description": "tws test WS Docker BC Aut basica (EAD)"
	},
	"tapitestapibcautbasicaDocker": {
		"prefix": "tapi Test APIs DOCKER BC Aut basica (EAD)",
		"body": [
			"### AuthBasica\r",
			"@Container = Container\r",
			"@APIPublisher = EAD\r",
			"@APIGroup = gestion\r",
			"@APIVersion = beta\r",
			"@CompaniesID = e9fc2a7c-d172-ea11-bb36-001dd8b76588\r",
			"@EntityName = Entity\r",
			"@User = User\r",
			"@WSPass = aaaaaaaaaa1111111111aaaaaaaaaa1111111111aaaa\r",
			"\r",
			"###-------------------------------- Obtener todas las APIs BC\r",
			"GET http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Obtener empresas\r",
			"GET http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Obtener todos los reg\r",
			"GET http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Obtener un solo reg\r",
			"@REC = b14f857d-5920-440b-93c7-24a0b7b1a464\r",
			"GET http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}({{REC}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"\r",
			"###-------------------------------- Insertar datos\r",
			"POST http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"\r",
			"{\r",
			"    \"Text\": \"Text\",\r",
			"    \"Int\": 100\r",
			"}\r",
			"\r",
			"###-------------------------------- Modificar datos\r",
			"@RECMOD = fe54eaeb-7eb1-48ad-824d-c5b3bf66c670\r",
			"PATCH http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}({{RECMOD}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"If-Match: *\r",
			"\r",
			"{\r",
			"    \"Text\": \"Text\",\r",
			"    \"Int\": 100\r",
			"}\r",
			"\r",
			"###-------------------------------- Eliminar Reg\r",
			"@RECDELETE = fe54eaeb-7eb1-48ad-824d-c5b3bf66c670\r",
			"DELETE http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}({{RECDELETE}})\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			"content-type: application/json\r",
			"If-Match: *\r",
			"\r",
			"###-------------------------------- Obtener reg Filtrados\r",
			"# se tiene que indicar /?$filter= seguido del campo que queremos filtrar el operdor para comparar en este caso eq y por ultimo entre comillas simples el valor de nuestro campo.\r",
			"GET http://{{Container}}:7048/BC/api/{{APIPublisher}}/{{APIGroup}}/{{APIVersion}}/companies({{CompaniesID}})/{{EntityName}}/?$filter=nombre eq 'Antonio'\r",
			"Authorization: Basic {{User}} {{WSPass}}\r",
			""
		],
		"description": "Test APIs DOCKER BC Aut basica (EAD)"
	},
	"ttestunboundactions": {
        "prefix": "Test Unbound Action SAAS (EAD)",
        "body": [
            "@TenantId = ${1:1111111-1111-1111-1111-111111111111} \r",
            "@AppId = ${2:1111111-1111-1111-1111-111111111111}\r",
            "@Secret = ${3:1111111-1111-1111-1111-111111111111}\r",
            "\r",
            "# @name AuthResponse\r",
            "POST https://login.microsoftonline.com/{{TenantId}}/oauth2/v2.0/token\r",
            "Content-type: application/x-www-form-urlencoded\r",
            "\r",
            "grant_type=client_credentials\r",
            "&client_id={{AppId}}\r",
            "&client_secret={{Secret}}\r",
            "&scope=https://api.businesscentral.dynamics.com/.default\r",
            "\r",
            "#### Token\r",
            "@AuthHeader = Bearer {{AuthResponse.response.body.$.access_token}}\r",
            "### \r",
            "\r",
            "@Environment = Production\r",
            "### Metadata ODataV4 ###\r",
            "GET https://api.businesscentral.dynamics.com/v2.0/{{TenantId}}/{{Environment}}/ODataV4/$metadata\r",
            "Authorization: {{AuthHeader}}\r",
            "###\r",
            "\r",
            "### Companies ###\r",
            "GET https://api.businesscentral.dynamics.com/v2.0/{{TenantId}}/{{Environment}}/api/v2.0/companies\r",
            "Authorization: {{AuthHeader}}\r",
            "###\r",
            "\r",
            "@Entity = ${4:EntityName}\r",
            "@Action = ${5:ActionName}\r",
            "@Company = ${6:1111111-1111-1111-1111-111111111111}\r",
            "### getsystemidfromfields ###\r",
            "POST https://api.businesscentral.dynamics.com/v2.0/{{TenantId}}/{{Environment}}/ODataV4/{{Entity}}_{{Action}}?company={{Company}}\r",
            "content-type: application/json\r",
            "Authorization: {{AuthHeader}}\r",
            "\r",
            "{\r",
            "    \"EntryNo\": 1,\r",
            "    \"Status\": \"Ok\", \r",
            "    \"Error\": \"Texto de error\"\r",
            "}"
        ],
		"description": "Test Unbound Action SAAS (EAD)"
    }
}